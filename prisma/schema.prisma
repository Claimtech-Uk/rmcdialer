generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model agent_sessions {
  id                         String    @id @db.Uuid
  agent_id                   Int
  status                     String    @default("offline")
  current_call_session_id    String?   @db.Uuid
  login_at                   DateTime  @default(now())
  logout_at                  DateTime?
  last_activity              DateTime  @default(now())
  calls_completed_today      Int       @default(0)
  total_talk_time_seconds    Int       @default(0)
  auto_dialer_active         Boolean   @default(false)
  auto_dialer_queue_type     String?
  last_auto_call_at          DateTime?
  calls_completed_in_session Int       @default(0)
  ended_at                   DateTime? @db.Timestamp(6)
  last_heartbeat             DateTime? @default(now()) @db.Timestamp(6)
  agents                     agents    @relation(fields: [agent_id], references: [id])
}

model agents {
  id                                                        Int                      @id @default(autoincrement())
  email                                                     String                   @unique
  password_hash                                             String
  first_name                                                String
  last_name                                                 String
  role                                                      String                   @default("agent")
  team                                                      String                   @default("general")
  allowed_queues                                            Json                     @default("[\"unsigned_users\", \"outstanding_requests\"]")
  is_active                                                 Boolean                  @default(true)
  is_ai_agent                                               Boolean                  @default(false)
  twilio_worker_sid                                         String?
  created_at                                                DateTime                 @default(now())
  updated_at                                                DateTime
  created_by                                                Int?
  last_login_at                                             DateTime?
  updated_by                                                Int?
  agent_sessions                                            agent_sessions[]
  auto_dialer_settings                                      auto_dialer_settings?
  call_outcomes                                             call_outcomes[]
  call_queue                                                call_queue[]
  call_sessions_call_sessions_agent_idToagents              call_sessions[]          @relation("call_sessions_agent_idToagents")
  call_sessions_call_sessions_last_outcome_agent_idToagents call_sessions[]          @relation("call_sessions_last_outcome_agent_idToagents")
  callback_notifications                                    callback_notifications[]
  callbacks                                                 callbacks[]
  conversions                                               conversions[]
  magic_link_activities                                     magic_link_activities[]
  missed_calls                                              missed_calls[]
  short_urls                                                short_urls[]
  sms_conversations                                         sms_conversations[]
}

model auto_dialer_settings {
  id                          String   @id @db.Uuid
  agent_id                    Int      @unique
  team                        String
  time_between_calls_seconds  Int      @default(30)
  auto_start_enabled          Boolean  @default(false)
  max_calls_per_session       Int      @default(100)
  break_interval_minutes      Int      @default(120)
  audio_notifications_enabled Boolean  @default(true)
  keyboard_shortcuts_enabled  Boolean  @default(true)
  created_at                  DateTime @default(now())
  updated_at                  DateTime
  agents                      agents   @relation(fields: [agent_id], references: [id])
}

model call_outcomes {
  id                    String        @id @db.Uuid
  call_session_id       String        @db.Uuid
  outcome_type          String
  outcome_notes         String?
  next_call_delay_hours Int?
  score_adjustment      Int?
  magic_link_sent       Boolean       @default(false)
  sms_sent              Boolean       @default(false)
  documents_requested   Json?
  recorded_by_agent_id  Int
  created_at            DateTime      @default(now())
  call_sessions         call_sessions @relation(fields: [call_session_id], references: [id])
  agents                agents        @relation(fields: [recorded_by_agent_id], references: [id])

  @@index([call_session_id])
}

model call_queue {
  id                   String           @id @db.Uuid
  user_id              BigInt
  claim_id             BigInt?
  queue_type           String
  priority_score       Int              @default(0)
  queue_position       Int?
  status               String           @default("pending")
  queue_reason         String?
  assigned_to_agent_id Int?
  assigned_at          DateTime?
  callback_id          String?          @db.Uuid
  available_from       DateTime?
  created_at           DateTime         @default(now())
  updated_at           DateTime
  agents               agents?          @relation(fields: [assigned_to_agent_id], references: [id])
  callbacks            callbacks?       @relation(fields: [callback_id], references: [id])
  user_call_scores     user_call_scores @relation(fields: [user_id], references: [user_id])
  call_sessions        call_sessions[]

  @@index([status, priority_score, created_at])
}

model call_sessions {
  id                                                 String                  @id @db.Uuid
  user_id                                            BigInt
  agent_id                                           Int
  call_queue_id                                      String                  @db.Uuid
  twilio_call_sid                                    String?
  status                                             String                  @default("initiated")
  direction                                          String                  @default("outbound")
  started_at                                         DateTime                @default(now())
  connected_at                                       DateTime?
  ended_at                                           DateTime?
  duration_seconds                                   Int?
  talk_time_seconds                                  Int?
  user_claims_context                                Json?
  created_at                                         DateTime                @default(now())
  agent_performance_score                            Int?
  call_attempt_number                                Int?
  call_score                                         Int?
  call_source                                        String?
  callback_scheduled                                 Boolean                 @default(false)
  follow_up_required                                 Boolean                 @default(false)
  last_outcome_agent_id                              Int?
  last_outcome_at                                    DateTime?
  last_outcome_notes                                 String?
  last_outcome_type                                  String?
  magic_link_sent                                    Boolean                 @default(false)
  queue_position                                     Int?
  score_adjustment                                   Int?
  documents_requested                                Json?
  recording_duration_seconds                         Int?
  recording_sid                                      String?
  recording_status                                   String?
  recording_url                                      String?
  sale_made                                          Boolean                 @default(false)
  sentiment_score                                    Decimal?                @db.Decimal(3, 2)
  sms_sent                                           Boolean                 @default(false)
  source_queue_type                                  String?
  transcript_status                                  String?
  transcript_summary                                 String?
  transcript_text                                    String?
  transcript_url                                     String?
  updated_at                                         DateTime
  user_priority_score                                Int?
  call_outcomes                                      call_outcomes[]
  agents_call_sessions_agent_idToagents              agents                  @relation("call_sessions_agent_idToagents", fields: [agent_id], references: [id])
  call_queue                                         call_queue              @relation(fields: [call_queue_id], references: [id])
  agents_call_sessions_last_outcome_agent_idToagents agents?                 @relation("call_sessions_last_outcome_agent_idToagents", fields: [last_outcome_agent_id], references: [id])
  magic_link_activities                              magic_link_activities[]

  @@index([agent_id])
  @@index([created_at])
  @@index([user_id])
}

model callback_notifications {
  id                String    @id @db.Uuid
  callback_id       String    @db.Uuid
  agent_id          Int?
  notification_type String
  status            String    @default("pending")
  sent_at           DateTime?
  error_message     String?
  created_at        DateTime  @default(now())
  agents            agents?   @relation(fields: [agent_id], references: [id])
  callbacks         callbacks @relation(fields: [callback_id], references: [id], onDelete: Cascade)

  @@index([agent_id])
  @@index([callback_id])
  @@index([notification_type])
}

model callbacks {
  id                        String                   @id @db.Uuid
  user_id                   BigInt
  scheduled_for             DateTime
  callback_reason           String?
  preferred_agent_id        Int?
  original_call_session_id  String                   @db.Uuid
  status                    String                   @default("pending")
  completed_call_session_id String?                  @db.Uuid
  created_at                DateTime                 @default(now())
  call_queue                call_queue[]
  callback_notifications    callback_notifications[]
  agents                    agents?                  @relation(fields: [preferred_agent_id], references: [id])

  @@index([scheduled_for])
  @@index([status])
}

model conversions {
  id                   String    @id @db.Uuid
  user_id              BigInt
  previous_queue_type  String
  conversion_type      String
  conversion_reason    String?
  final_score          Int?
  total_call_attempts  Int       @default(0)
  last_call_at         DateTime?
  converted_at         DateTime  @default(now())
  primary_agent_id     Int?
  contributing_agents  Json?
  documents_received   Json?
  signature_obtained   Boolean   @default(false)
  requirements_met     Json?
  claim_value          Decimal?  @db.Decimal(10, 2)
  estimated_commission Decimal?  @db.Decimal(10, 2)
  agents               agents?   @relation(fields: [primary_agent_id], references: [id])

  @@index([conversion_type])
  @@index([converted_at])
  @@index([primary_agent_id])
  @@index([user_id])
}

model magic_link_activities {
  id                 String         @id @db.Uuid
  user_id            BigInt
  link_type          String
  link_token         String
  sent_via           String
  sent_by_agent_id   Int
  sent_at            DateTime       @default(now())
  accessed_at        DateTime?
  call_session_id    String?        @db.Uuid
  expires_at         DateTime?
  is_active          Boolean        @default(true)
  access_count       Int            @default(0)
  expired_at         DateTime?
  expired_reason     String?
  user_agent         String?
  ip_address         String?
  twilio_message_sid String?
  call_sessions      call_sessions? @relation(fields: [call_session_id], references: [id])
  agents             agents         @relation(fields: [sent_by_agent_id], references: [id])

  @@index([is_active, expires_at])
  @@index([link_token])
  @@index([user_id])
}

model missed_calls {
  id                   String    @id @db.Uuid
  phone_number         String    @db.VarChar(20)
  caller_name          String?   @db.VarChar(255)
  user_id              BigInt?
  missed_at            DateTime  @default(now())
  reason               String    @db.VarChar(50)
  status               String    @default("pending") @db.VarChar(20)
  assigned_to_agent_id Int?
  assigned_at          DateTime?
  twilio_call_sid      String?   @db.VarChar(255)
  session_id           String?   @db.VarChar(255)
  created_at           DateTime  @default(now())
  agents               agents?   @relation(fields: [assigned_to_agent_id], references: [id])

  @@index([assigned_to_agent_id], map: "idx_missed_calls_assigned_agent")
  @@index([phone_number], map: "idx_missed_calls_phone_number")
  @@index([status, missed_at], map: "idx_missed_calls_status_missed_at")
}

model outstanding_requests_queue {
  id                      String    @id @db.Uuid
  user_id                 BigInt    @unique
  claim_id                BigInt?
  priority_score          Int       @default(0)
  queue_position          Int
  status                  String    @default("pending")
  queue_reason            String?
  requirement_types       Json      @default("[]")
  total_requirements      Int       @default(0)
  pending_requirements    Int       @default(0)
  completed_requirements  Int       @default(0)
  oldest_requirement_date DateTime?
  available_from          DateTime  @default(now())
  assigned_to_agent       Int?
  assigned_at             DateTime?
  created_at              DateTime  @default(now())
  updated_at              DateTime

  @@index([available_from])
  @@index([queue_position])
  @@index([status, priority_score])
}

model short_urls {
  id                  String    @id
  original_url        String
  short_code          String    @unique
  access_count        Int       @default(0)
  last_accessed_at    DateTime?
  expires_at          DateTime?
  is_active           Boolean   @default(true)
  created_at          DateTime  @default(now())
  created_by_agent_id Int?
  agents              agents?   @relation(fields: [created_by_agent_id], references: [id])

  @@index([is_active, expires_at])
  @@index([short_code])
}

model sms_conversations {
  id                  String         @id @db.Uuid
  user_id             BigInt?
  phone_number        String
  status              String         @default("active")
  last_message_at     DateTime       @default(now())
  assigned_agent_id   Int?
  priority            String         @default("normal")
  unread_count        Int            @default(0)
  last_agent_response DateTime?
  created_at          DateTime       @default(now())
  agents              agents?        @relation(fields: [assigned_agent_id], references: [id])
  sms_messages        sms_messages[]

  @@index([phone_number])
  @@index([status, last_message_at])
}

model sms_messages {
  id                 String            @id @db.Uuid
  conversation_id    String            @db.Uuid
  direction          String
  body               String
  twilio_message_sid String?
  is_auto_response   Boolean           @default(false)
  sent_at            DateTime?
  received_at        DateTime?
  created_at         DateTime          @default(now())
  message_type       String?
  sms_conversations  sms_conversations @relation(fields: [conversation_id], references: [id])

  @@index([conversation_id, created_at])
}

model unsigned_users_queue {
  id                      String    @id @db.Uuid
  user_id                 BigInt    @unique
  claim_id                BigInt?
  priority_score          Int       @default(0)
  queue_position          Int
  status                  String    @default("pending")
  queue_reason            String?
  signature_missing_since DateTime?
  signature_type          String?
  available_from          DateTime  @default(now())
  assigned_to_agent       Int?
  assigned_at             DateTime?
  created_at              DateTime  @default(now())
  updated_at              DateTime

  @@index([available_from])
  @@index([queue_position])
  @@index([status, priority_score])
}

model user_call_scores {
  id                    String       @id @db.Uuid
  user_id               BigInt       @unique
  current_score         Int          @default(0)
  next_call_after       DateTime?
  last_call_at          DateTime?
  total_attempts        Int          @default(0)
  successful_calls      Int          @default(0)
  last_outcome          String?
  base_score            Int          @default(0)
  outcome_penalty_score Int          @default(0)
  time_penalty_score    Int          @default(0)
  is_active             Boolean      @default(true)
  current_queue_type    String?
  last_reset_date       DateTime?
  last_queue_check      DateTime?
  created_at            DateTime     @default(now())
  updated_at            DateTime
  call_queue            call_queue[]

  @@index([current_queue_type, current_score])
  @@index([is_active, current_score])
  @@index([next_call_after, current_score])
}
